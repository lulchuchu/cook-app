{
    "ast": null,
    "code": "var _jsxFileName = \"D:\\\\React Native\\\\MAD\\\\cook-app\\\\App.tsx\",\n  _this = this;\nimport React from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Login from \"./src/pages/Login/Login\";\nimport Register from \"./src/pages/Register/Register\";\nimport OptionLogin from \"./src/layouts/OptionLogin/OptionLogin\";\nimport Home from \"./src/pages/Home/Home\";\nimport Setting from \"./src/pages/Setting/Setting\";\nimport RecipeScreen from \"./src/pages/Recipe/Recipe\";\nimport CartScreen from \"./src/pages/Cart/Cart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Stack = createStackNavigator();\nvar App = function App() {\n  return _jsxDEV(NavigationContainer, {\n    children: [_jsxDEV(StatusBar, {\n      backgroundColor: \"#32363b\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, _this), _jsxDEV(Stack.Navigator, {\n      initialRouteName: \"Intro\",\n      children: [_jsxDEV(Stack.Screen, {\n        name: \"Intro\",\n        component: CartScreen,\n        options: {\n          headerShown: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, _this), _jsxDEV(Stack.Screen, {\n        name: \"Login\",\n        component: Login,\n        options: {\n          headerShown: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, _this), _jsxDEV(Stack.Screen, {\n        name: \"Register\",\n        component: Register,\n        options: {\n          headerShown: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, _this), _jsxDEV(Stack.Screen, {\n        name: \"OptionLogin\",\n        component: OptionLogin,\n        options: {\n          headerShown: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, _this), _jsxDEV(Stack.Screen, {\n        name: \"Home\",\n        component: Home,\n        options: {\n          headerShown: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, _this), _jsxDEV(Stack.Screen, {\n        name: \"Setting\",\n        component: Setting,\n        options: {\n          headerShown: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, _this), _jsxDEV(Stack.Screen, {\n        name: \"Recipe\",\n        component: RecipeScreen,\n        options: {\n          headerShown: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, _this);\n};\nexport default App;",
    "map": {
        "version": 3,
        "names": [
            "React",
            "StatusBar",
            "NavigationContainer",
            "createStackNavigator",
            "Login",
            "Register",
            "OptionLogin",
            "Home",
            "Setting",
            "RecipeScreen",
            "CartScreen",
            "jsxDEV",
            "_jsxDEV",
            "Stack",
            "App",
            "children",
            "backgroundColor",
            "fileName",
            "_jsxFileName",
            "lineNumber",
            "columnNumber",
            "_this",
            "Navigator",
            "initialRouteName",
            "Screen",
            "name",
            "component",
            "options",
            "headerShown"
        ],
        "sources": ["D:/React Native/MAD/cook-app/App.tsx"],
        "sourcesContent": [
            "import React from 'react';\nimport { StatusBar } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport Intro from './src/layouts/Intro/Intro';\nimport Login from './src/pages/Login/Login';\nimport Register from './src/pages/Register/Register';\nimport OptionLogin from './src/layouts/OptionLogin/OptionLogin';\nimport Home from './src/pages/Home/Home';\nimport Setting from './src/pages/Setting/Setting';\nimport RecipeScreen from './src/pages/Recipe/Recipe';\nimport CartScreen from './src/pages/Cart/Cart';\n\nexport type RootStackParamList = {\n    Intro: undefined;\n    Login: undefined;\n    Register: undefined;\n    OptionLogin: undefined;\n    Home: undefined;\n    Setting: undefined;\n    Recipe: undefined;\n    Cart: undefined;\n};\n\nconst Stack = createStackNavigator<RootStackParamList>();\n\nconst App: React.FC = () => {\n    return (\n        <NavigationContainer>\n            <StatusBar backgroundColor=\"#32363b\" />\n            <Stack.Navigator initialRouteName=\"Intro\">\n                <Stack.Screen name=\"Intro\" component={CartScreen} options={{ headerShown: false }} />\n                <Stack.Screen name=\"Login\" component={Login} options={{ headerShown: false }} />\n                <Stack.Screen name=\"Register\" component={Register} options={{ headerShown: false }} />\n                <Stack.Screen name=\"OptionLogin\" component={OptionLogin} options={{ headerShown: false }} />\n                <Stack.Screen name=\"Home\" component={Home} options={{ headerShown: false }} />\n                <Stack.Screen name=\"Setting\" component={Setting} options={{ headerShown: false }} />\n                <Stack.Screen name=\"Recipe\" component={RecipeScreen} options={{ headerShown: false }} />\n            </Stack.Navigator>\n        </NavigationContainer>\n    );\n};\n\nexport default App;\n"
        ],
        "mappings": "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"
    },
    "metadata": {},
    "sourceType": "module",
    "externalDependencies": []
}
