{
    "ast": null,
    "code": "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\React Native\\\\MAD\\\\cook-app\\\\src\\\\layouts\\\\SaveCookBook\\\\SaveCookBook.tsx\",\n  _this = this;\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useFonts } from 'expo-font';\nimport styles from \"./style\";\nimport CreateCookBook from \"../CreateCookBook/CreateCookBook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar SaveCookBook = function SaveCookBook() {\n  var _useFonts = useFonts({\n      'Inconsolata-Bold': require(\"../../../assets/fonts/Inconsolata_Condensed-Bold.ttf\"),\n      'Inconsolata-Medium': require(\"../../../assets/fonts/Inconsolata_Condensed-Medium.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontLoaded = _useFonts2[0];\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showFormModal = _useState2[0],\n    setShow = _useState2[1];\n  if (!fontLoaded) {\n    return null;\n  }\n  return showFormModal ? _jsxDEV(CreateCookBook, {\n    cancel: function cancel() {\n      return setShow(false);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 13\n  }, _this) : _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: {\n        marginBottom: 20\n      },\n      children: [_jsxDEV(Text, {\n        style: styles.textInBold,\n        children: \"L\\u01B0u c\\xF4ng th\\u1EE9c\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, _this), _jsxDEV(Text, {\n        style: styles.textDes,\n        children: \"B\\u1EA1n ch\\u01B0a c\\xF3 danh s\\xE1ch l\\u01B0u c\\xF4ng th\\u1EE9c n\\u1EA5u \\u0103n n\\xE0o!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, _this), _jsxDEV(View, {\n      style: styles.ctnButton,\n      children: _jsxDEV(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return setShow(true);\n        },\n        children: _jsxDEV(Text, {\n          style: styles.textBtn,\n          children: \"T\\u1EA1o m\\u1EDBi cookbook\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 13\n  }, _this);\n};\nexport default SaveCookBook;",
    "map": {
        "version": 3,
        "names": [
            "React",
            "useState",
            "Text",
            "TouchableOpacity",
            "View",
            "useFonts",
            "styles",
            "CreateCookBook",
            "jsxDEV",
            "_jsxDEV",
            "SaveCookBook",
            "_useFonts",
            "require",
            "_useFonts2",
            "_slicedToArray",
            "fontLoaded",
            "_useState",
            "_useState2",
            "showFormModal",
            "setShow",
            "cancel",
            "fileName",
            "_jsxFileName",
            "lineNumber",
            "columnNumber",
            "_this",
            "style",
            "container",
            "children",
            "marginBottom",
            "textInBold",
            "textDes",
            "ctnButton",
            "button",
            "onPress",
            "textBtn"
        ],
        "sources": ["D:/React Native/MAD/cook-app/src/layouts/SaveCookBook/SaveCookBook.tsx"],
        "sourcesContent": [
            "import React, { useState } from 'react';\r\nimport { Text, TouchableOpacity, TouchableWithoutFeedback, View } from 'react-native';\r\nimport { useFonts } from 'expo-font';\r\n\r\nimport styles from './style';\r\nimport CreateCookBook from '../CreateCookBook/CreateCookBook';\r\n\r\nconst SaveCookBook : React.FC = () => {\r\n\r\n    const [fontLoaded] = useFonts({\r\n        'Inconsolata-Bold': require('../../../assets/fonts/Inconsolata_Condensed-Bold.ttf'),\r\n        'Inconsolata-Medium': require('../../../assets/fonts/Inconsolata_Condensed-Medium.ttf'),\r\n    });\r\n\r\n    const [showFormModal, setShow] = useState(false);\r\n\r\n    if (!fontLoaded) {\r\n        return null;\r\n    }\r\n\r\n    return showFormModal ? \r\n        (\r\n            <CreateCookBook cancel = {() => setShow(false)}/>\r\n        )\r\n        :\r\n        (\r\n            <View style = {styles.container}>\r\n                <View style = {{\r\n                    marginBottom: 20\r\n                }}>\r\n                    <Text style = {styles.textInBold}>Lưu công thức</Text>\r\n                    <Text style={styles.textDes}>Bạn chưa có danh sách lưu công thức nấu ăn nào!</Text>\r\n                </View>\r\n                <View style = {styles.ctnButton}>\r\n                    <TouchableOpacity style = {styles.button} onPress={() => setShow(true)}>\r\n                        <Text style = {styles.textBtn}>Tạo mới cookbook</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        );\r\n};\r\n\r\nexport default SaveCookBook;"
        ],
        "mappings": ";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAExC,SAASC,QAAQ,QAAQ,WAAW;AAEpC,OAAOC,MAAM;AACb,OAAOC,cAAc;AAAyC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,IAAMC,YAAuB,GAAG,SAA1BA,YAAuBA,CAAA,EAAS;EAElC,IAAAC,SAAA,GAAqBN,QAAQ,CAAC;MAC1B,kBAAkB,EAAEO,OAAO,uDAAuD,CAAC;MACnF,oBAAoB,EAAEA,OAAO,yDAAyD;IAC1F,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAHKI,UAAU,GAAAF,UAAA;EAKjB,IAAAG,SAAA,GAAiCf,QAAQ,CAAC,KAAK,CAAC;IAAAgB,UAAA,GAAAH,cAAA,CAAAE,SAAA;IAAzCE,aAAa,GAAAD,UAAA;IAAEE,OAAO,GAAAF,UAAA;EAE7B,IAAI,CAACF,UAAU,EAAE;IACb,OAAO,IAAI;EACf;EAEA,OAAOG,aAAa,GAEZT,OAAA,CAACF,cAAc;IAACa,MAAM,EAAI,SAAAA,OAAA;MAAA,OAAMD,OAAO,CAAC,KAAK,CAAC;IAAA;EAAC;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KAAC,CAAC,GAIjDhB,OAAA,CAACL,IAAI;IAACsB,KAAK,EAAIpB,MAAM,CAACqB,SAAU;IAAAC,QAAA,GAC5BnB,OAAA,CAACL,IAAI;MAACsB,KAAK,EAAI;QACXG,YAAY,EAAE;MAClB,CAAE;MAAAD,QAAA,GACEnB,OAAA,CAACP,IAAI;QAACwB,KAAK,EAAIpB,MAAM,CAACwB,UAAW;QAAAF,QAAA,EAAC;MAAa;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAM,CAAC,EACtDhB,OAAA,CAACP,IAAI;QAACwB,KAAK,EAAEpB,MAAM,CAACyB,OAAQ;QAAAH,QAAA,EAAC;MAA+C;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAM,CAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACjF,CAAC,EACPhB,OAAA,CAACL,IAAI;MAACsB,KAAK,EAAIpB,MAAM,CAAC0B,SAAU;MAAAJ,QAAA,EAC5BnB,OAAA,CAACN,gBAAgB;QAACuB,KAAK,EAAIpB,MAAM,CAAC2B,MAAO;QAACC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMf,OAAO,CAAC,IAAI,CAAC;QAAA,CAAC;QAAAS,QAAA,EACnEnB,OAAA,CAACP,IAAI;UAACwB,KAAK,EAAIpB,MAAM,CAAC6B,OAAQ;UAAAP,QAAA,EAAC;QAAgB;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAM;MAAC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KACxC;IAAC;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACjB,CAAC;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACL,CACT;AACT,CAAC;AAED,eAAef,YAAY"
    },
    "metadata": {},
    "sourceType": "module",
    "externalDependencies": []
}
