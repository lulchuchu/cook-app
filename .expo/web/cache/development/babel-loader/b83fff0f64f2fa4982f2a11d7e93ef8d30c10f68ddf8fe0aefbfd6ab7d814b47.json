{
    "ast": null,
    "code": "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\React Native\\\\MAD\\\\cook-app\\\\src\\\\layouts\\\\SelectDiet\\\\Diet.tsx\",\n  _this = this;\nimport React, { useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useFonts } from 'expo-font';\nimport { faCircleXmark } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport styles from \"./styles\";\nimport Item1 from \"../../components/SelectDiet/Item1\";\nimport Item2 from \"../../components/SelectDiet/Item2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar message = require(\"../../../assets/images/message.png\");\nvar Diet = function Diet() {\n  var _useFonts = useFonts({\n      'Inconsolata-Bold': require(\"../../../assets/fonts/Inconsolata-Bold.ttf\"),\n      'Inconsolata': require(\"../../../assets/fonts/Inconsolata-Medium.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontLoaded = _useFonts2[0];\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showItem1 = _useState2[0],\n    setShowItem1 = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showItem2 = _useState4[0],\n    setShowItem2 = _useState4[1];\n  var handleClick = function handleClick() {\n    setShowItem1(true);\n  };\n  var handleNextLayout = function handleNextLayout() {\n    setShowItem1(false);\n    setShowItem2(true);\n  };\n  if (!fontLoaded) {\n    return null;\n  }\n  return showItem1 || showItem2 ? showItem1 ? _jsxDEV(Item1, {\n    func: handleNextLayout\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 21\n  }, _this) : _jsxDEV(Item2, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 58\n  }, _this) : _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(TouchableOpacity, {\n        style: styles.iconClose,\n        children: _jsxDEV(FontAwesomeIcon, {\n          icon: faCircleXmark,\n          size: 26,\n          color: \"#656361\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, _this), _jsxDEV(Text, {\n        style: styles.textHeader,\n        children: \"C\\xF3 g\\xEC m\\u1EDBi?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, _this), _jsxDEV(View, {\n      style: styles.ctnImg,\n      children: _jsxDEV(Image, {\n        source: message,\n        resizeMode: \"cover\",\n        style: styles.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, _this), _jsxDEV(View, {\n      style: styles.ctnText,\n      children: [_jsxDEV(Text, {\n        style: styles.text1,\n        children: \"Kh\\xE1m ph\\xE1 c\\xF4ng th\\u1EE9c n\\u1EA5u \\u0103n theo s\\u1EDF th\\xEDch c\\u1EE7a b\\u1EA1n!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, _this), _jsxDEV(Text, {\n        style: styles.text2,\n        children: \"C\\xF3 \\u0111\\u01B0\\u1EE3c c\\xF4ng th\\u1EE9c n\\u1EA5u \\u0103n c\\xE1 nh\\xE2n c\\u1EE7a ri\\xEAng b\\u1EA1n ch\\u1EC9 trong 10 gi\\xE2y.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, _this), _jsxDEV(View, {\n      style: styles.ctnButton,\n      children: _jsxDEV(TouchableOpacity, {\n        style: styles.button,\n        onPress: handleClick,\n        children: _jsxDEV(Text, {\n          style: styles.textBtn,\n          children: \"B\\u1EAFt \\u0111\\u1EA7u\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, _this);\n};\nexport default Diet;",
    "map": {
        "version": 3,
        "names": [
            "React",
            "useState",
            "Image",
            "Text",
            "TouchableOpacity",
            "View",
            "useFonts",
            "faCircleXmark",
            "FontAwesomeIcon",
            "styles",
            "Item1",
            "Item2",
            "jsxDEV",
            "_jsxDEV",
            "message",
            "require",
            "Diet",
            "_useFonts",
            "_useFonts2",
            "_slicedToArray",
            "fontLoaded",
            "_useState",
            "_useState2",
            "showItem1",
            "setShowItem1",
            "_useState3",
            "_useState4",
            "showItem2",
            "setShowItem2",
            "handleClick",
            "handleNextLayout",
            "func",
            "fileName",
            "_jsxFileName",
            "lineNumber",
            "columnNumber",
            "_this",
            "style",
            "container",
            "children",
            "header",
            "iconClose",
            "icon",
            "size",
            "color",
            "textHeader",
            "ctnImg",
            "source",
            "resizeMode",
            "image",
            "ctnText",
            "text1",
            "text2",
            "ctnButton",
            "button",
            "onPress",
            "textBtn"
        ],
        "sources": ["D:/React Native/MAD/cook-app/src/layouts/SelectDiet/Diet.tsx"],
        "sourcesContent": [
            "import React, { useState } from 'react';\nimport { Image, Text, TouchableOpacity, View } from 'react-native';\nimport { useFonts } from 'expo-font';\nimport { faCircleXmark } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\n\nimport styles from './styles';\nimport Item1 from '../../components/SelectDiet/Item1';\nimport Item2 from '../../components/SelectDiet/Item2';\nconst message = require('../../../assets/images/message.png');\n\n\nconst Diet: React.FC = () => {\n    const [fontLoaded] = useFonts({\n        'Inconsolata-Bold': require('../../../assets/fonts/Inconsolata-Bold.ttf'),\n        'Inconsolata': require('../../../assets/fonts/Inconsolata-Medium.ttf'),\n    });\n\n    const [showItem1, setShowItem1] = useState(false);\n    const [showItem2, setShowItem2] = useState(false);\n\n    const handleClick = () => {\n        setShowItem1(true);\n    };\n\n    const handleNextLayout = () => {\n        setShowItem1(false);\n        setShowItem2(true);\n    }\n\n    if (!fontLoaded) {\n        return null;\n    }\n\n    return showItem1 || showItem2 ? (\n        showItem1 ? <Item1 func = {handleNextLayout}/> : <Item2/>\n    ) : (\n        <View style={styles.container}>\n            <View style={styles.header}>\n                <TouchableOpacity style={styles.iconClose}>\n                    <FontAwesomeIcon icon={faCircleXmark} size={26} color=\"#656361\" />\n                </TouchableOpacity>\n\n                <Text style={styles.textHeader}>Có gì mới?</Text>\n            </View>\n\n            <View style={styles.ctnImg}>\n                <Image source={message} resizeMode=\"cover\" style={styles.image} />\n            </View>\n\n            <View style={styles.ctnText}>\n                <Text style={styles.text1}>Khám phá công thức nấu ăn theo sở thích của bạn!</Text>\n                <Text style={styles.text2}>Có được công thức nấu ăn cá nhân của riêng bạn chỉ trong 10 giây.</Text>\n            </View>\n\n            <View style={styles.ctnButton}>\n                <TouchableOpacity style={styles.button} onPress={handleClick}>\n                    <Text style={styles.textBtn}>Bắt đầu</Text>\n                </TouchableOpacity>\n            </View>\n        </View>\n    );\n};\n\nexport default Diet;\n"
        ],
        "mappings": "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"
    },
    "metadata": {},
    "sourceType": "module",
    "externalDependencies": []
}
