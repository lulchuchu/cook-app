{
    "ast": null,
    "code": "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\React Native\\\\MAD\\\\cook-app\\\\src\\\\components\\\\RecipeCard\\\\RecipeCard.tsx\",\n  _this = this;\nimport React, { useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport { faHeart } from '@fortawesome/free-regular-svg-icons';\nimport styles from \"./styles\";\nimport { useFonts } from 'expo-font';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar background = require(\"../../../assets/images/home_bg.jpeg\");\nvar RecipeCard = function RecipeCard() {\n  var _useState = useState([{\n      uri: require(\"../../../assets/images/chef.png\")\n    }, {\n      uri: require(\"../../../assets/images/chef.png\")\n    }, {\n      uri: require(\"../../../assets/images/chef.png\")\n    }, {\n      uri: require(\"../../../assets/images/chef.png\")\n    }, {\n      uri: require(\"../../../assets/images/chef.png\")\n    }]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useFonts = useFonts({\n      'Inconsolata': require(\"../../../assets/fonts/Inconsolata-Medium.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontLoaded = _useFonts2[0];\n  var renderCard = function renderCard(_ref) {\n    var item = _ref.item;\n    return _jsxDEV(View, {\n      style: styles.itemRecipe,\n      children: [_jsxDEV(Image, {\n        source: background,\n        style: styles.imgRecipe,\n        resizeMode: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, _this), _jsxDEV(Text, {\n        style: styles.nameRecipe,\n        children: \"Ph\\u1EDF Vi\\u1EC7t Nam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, _this), _jsxDEV(View, {\n        style: styles.ctnChef,\n        children: [_jsxDEV(Image, {\n          source: {\n            uri: item.uri\n          },\n          style: styles.imgChef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, _this), _jsxDEV(Text, {\n          style: styles.nameChef,\n          children: \"Kitchen stories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, _this), _jsxDEV(View, {\n        style: styles.ctnHeart,\n        children: [_jsxDEV(FontAwesomeIcon, {\n          icon: faHeart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, _this), _jsxDEV(Text, {\n          style: styles.textHeart,\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, _this);\n  };\n  if (!fontLoaded) {\n    return null;\n  }\n  return _jsxDEV(View, {\n    children: _jsxDEV(FlatList, {\n      data: data,\n      renderItem: renderCard,\n      horizontal: true,\n      showsHorizontalScrollIndicator: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, _this);\n};\nexport default RecipeCard;",
    "map": {
        "version": 3,
        "names": [
            "React",
            "useState",
            "FlatList",
            "Image",
            "Text",
            "View",
            "FontAwesomeIcon",
            "faHeart",
            "styles",
            "useFonts",
            "jsxDEV",
            "_jsxDEV",
            "background",
            "require",
            "RecipeCard",
            "_useState",
            "uri",
            "_useState2",
            "_slicedToArray",
            "data",
            "setData",
            "_useFonts",
            "_useFonts2",
            "fontLoaded",
            "renderCard",
            "_ref",
            "item",
            "style",
            "itemRecipe",
            "children",
            "source",
            "imgRecipe",
            "resizeMode",
            "fileName",
            "_jsxFileName",
            "lineNumber",
            "columnNumber",
            "_this",
            "nameRecipe",
            "ctnChef",
            "imgChef",
            "nameChef",
            "ctnHeart",
            "icon",
            "textHeart",
            "renderItem",
            "horizontal",
            "showsHorizontalScrollIndicator"
        ],
        "sources": ["D:/React Native/MAD/cook-app/src/components/RecipeCard/RecipeCard.tsx"],
        "sourcesContent": [
            "import React, { useState } from 'react';\r\nimport { FlatList, Image, Text, View } from 'react-native';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\r\nimport { faHeart } from '@fortawesome/free-regular-svg-icons';\r\n\r\nimport styles from './styles';\r\nimport { useFonts } from 'expo-font';\r\nconst background = require('../../../assets/images/home_bg.jpeg');\r\n\r\ninterface Item {\r\n    uri: string;\r\n}\r\n\r\nconst RecipeCard : React.FC = () => {\r\n\r\n    const [data, setData]  = useState<Item[]>([\r\n        {uri: require('../../../assets/images/chef.png')},\r\n        {uri: require('../../../assets/images/chef.png')},\r\n        {uri: require('../../../assets/images/chef.png')},\r\n        {uri: require('../../../assets/images/chef.png')},\r\n        {uri: require('../../../assets/images/chef.png')}\r\n    ]);\r\n\r\n    const [fontLoaded] = useFonts({\r\n        'Inconsolata': require('../../../assets/fonts/Inconsolata-Medium.ttf')\r\n    });\r\n\r\n    const renderCard = ({item} : {item: Item}) =>{\r\n        return (\r\n            <View style={styles.itemRecipe}>\r\n                <Image source={background} style={styles.imgRecipe} resizeMode=\"cover\" />\r\n                <Text style={styles.nameRecipe}>Phở Việt Nam</Text>\r\n                <View style={styles.ctnChef}>\r\n                    <Image source={{uri: item.uri}} style={styles.imgChef} />\r\n                    <Text style={styles.nameChef}>Kitchen stories</Text>\r\n                </View>\r\n                <View style = {styles.ctnHeart}>\r\n                    <FontAwesomeIcon icon = {faHeart} />\r\n                    <Text style = {styles.textHeart}>10</Text>\r\n                </View>\r\n            </View>\r\n        )\r\n    };\r\n\r\n    if (!fontLoaded) {\r\n        return null;\r\n    }\r\n    return (\r\n        <View>\r\n            <FlatList \r\n                data = {data}\r\n                renderItem = {renderCard}\r\n                horizontal\r\n                showsHorizontalScrollIndicator = {false}\r\n            />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default RecipeCard;"
        ],
        "mappings": "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"
    },
    "metadata": {},
    "sourceType": "module",
    "externalDependencies": []
}
