{
    "ast": null,
    "code": "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\React Native\\\\MAD\\\\cook-app\\\\src\\\\components\\\\RecipeCard\\\\RecipeCard.tsx\",\n  _this = this;\nimport React, { useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport { faHeart } from '@fortawesome/free-regular-svg-icons';\nimport styles from \"./styles\";\nimport { useFonts } from 'expo-font';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar background = require(\"../../../assets/images/home_bg.jpeg\");\nvar chef = require(\"../../../assets/images/chef.png\");\nvar RecipeCard = function RecipeCard() {\n  var _useState = useState([{\n      uri: require(\"../../../assets/images/chef.png\")\n    }, {\n      uri: require(\"../../../assets/images/chef.png\")\n    }, {\n      uri: require(\"../../../assets/images/chef.png\")\n    }, {\n      uri: require(\"../../../assets/images/chef.png\")\n    }, {\n      uri: require(\"../../../assets/images/chef.png\")\n    }]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useFonts = useFonts({\n      Inconsolata: require(\"../../../assets/fonts/Inconsolata-Light.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontLoaded = _useFonts2[0];\n  var renderCard = function renderCard(_ref) {\n    var item = _ref.item;\n    return _jsxDEV(View, {\n      style: styles.itemRecipe,\n      children: [_jsxDEV(Image, {\n        source: background,\n        style: styles.imgRecipe,\n        resizeMode: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, _this), _jsxDEV(Text, {\n        style: styles.nameRecipe,\n        children: \"Ph\\u1EDF Vi\\u1EC7t Nam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, _this), _jsxDEV(View, {\n        style: styles.ctnChef,\n        children: [_jsxDEV(Image, {\n          source: chef,\n          style: styles.imgChef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, _this), _jsxDEV(Text, {\n          style: styles.nameChef,\n          children: \"Kitchen stories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, _this), _jsxDEV(View, {\n        style: styles.ctnHeart,\n        children: [_jsxDEV(FontAwesomeIcon, {\n          icon: faHeart,\n          color: \"#212121\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, _this), _jsxDEV(Text, {\n          style: styles.textHeart,\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, _this);\n  };\n  if (!fontLoaded) {\n    return null;\n  }\n  return _jsxDEV(View, {\n    children: _jsxDEV(FlatList, {\n      data: data,\n      renderItem: renderCard,\n      horizontal: true,\n      showsHorizontalScrollIndicator: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, _this);\n};\nexport default RecipeCard;",
    "map": {
        "version": 3,
        "names": [
            "React",
            "useState",
            "FlatList",
            "Image",
            "Text",
            "View",
            "FontAwesomeIcon",
            "faHeart",
            "styles",
            "useFonts",
            "jsxDEV",
            "_jsxDEV",
            "background",
            "require",
            "chef",
            "RecipeCard",
            "_useState",
            "uri",
            "_useState2",
            "_slicedToArray",
            "data",
            "setData",
            "_useFonts",
            "Inconsolata",
            "_useFonts2",
            "fontLoaded",
            "renderCard",
            "_ref",
            "item",
            "style",
            "itemRecipe",
            "children",
            "source",
            "imgRecipe",
            "resizeMode",
            "fileName",
            "_jsxFileName",
            "lineNumber",
            "columnNumber",
            "_this",
            "nameRecipe",
            "ctnChef",
            "imgChef",
            "nameChef",
            "ctnHeart",
            "icon",
            "color",
            "textHeart",
            "renderItem",
            "horizontal",
            "showsHorizontalScrollIndicator"
        ],
        "sources": ["D:/React Native/MAD/cook-app/src/components/RecipeCard/RecipeCard.tsx"],
        "sourcesContent": [
            "import React, { useState } from 'react';\nimport { FlatList, Image, Text, View } from 'react-native';\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport { faHeart } from '@fortawesome/free-regular-svg-icons';\n\nimport styles from './styles';\nimport { useFonts } from 'expo-font';\nconst background = require('../../../assets/images/home_bg.jpeg');\nconst chef = require('../../../assets/images/chef.png');\n\ninterface Item {\n    uri: string;\n}\n\nconst RecipeCard: React.FC = () => {\n    const [data, setData] = useState<Item[]>([\n        { uri: require('../../../assets/images/chef.png') },\n        { uri: require('../../../assets/images/chef.png') },\n        { uri: require('../../../assets/images/chef.png') },\n        { uri: require('../../../assets/images/chef.png') },\n        { uri: require('../../../assets/images/chef.png') },\n    ]);\n\n    const [fontLoaded] = useFonts({\n        Inconsolata: require('../../../assets/fonts/Inconsolata-Light.ttf'),\n    });\n\n    const renderCard = ({ item }: { item: Item }) => {\n        return (\n            <View style={styles.itemRecipe}>\n                <Image source={background} style={styles.imgRecipe} resizeMode=\"cover\" />\n                <Text style={styles.nameRecipe}>Phở Việt Nam</Text>\n                <View style={styles.ctnChef}>\n                    <Image source={chef} style={styles.imgChef} />\n                    <Text style={styles.nameChef}>Kitchen stories</Text>\n                </View>\n                <View style={styles.ctnHeart}>\n                    <FontAwesomeIcon icon={faHeart} color=\"#212121\" />\n                    <Text style={styles.textHeart}>10</Text>\n                </View>\n            </View>\n        );\n    };\n\n    if (!fontLoaded) {\n        return null;\n    }\n    return (\n        <View>\n            <FlatList data={data} renderItem={renderCard} horizontal showsHorizontalScrollIndicator={false} />\n        </View>\n    );\n};\n\nexport default RecipeCard;\n"
        ],
        "mappings": "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"
    },
    "metadata": {},
    "sourceType": "module",
    "externalDependencies": []
}
