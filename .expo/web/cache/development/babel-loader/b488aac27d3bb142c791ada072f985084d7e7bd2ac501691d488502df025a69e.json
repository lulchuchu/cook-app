{
    "ast": null,
    "code": "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\React Native\\\\MAD\\\\cook-app\\\\src\\\\layouts\\\\CreatePost\\\\CreatePost.tsx\",\n  _this = this;\nimport { faXmark } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport React, { useEffect, useRef, useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport styles from \"./style\";\nimport { useFonts } from 'expo-font';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar userImage = require(\"../../../assets/images/user.png\");\nvar CreatePost = function CreatePost() {\n  var textInputRef = useRef(null);\n  var _useFonts = useFonts({\n      'Inconsolata-Bold': require(\"../../../assets/fonts/Inconsolata-Bold.ttf\"),\n      'Inconsolata-Medium': require(\"../../../assets/fonts/Inconsolata-Medium.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontLoaded = _useFonts2[0];\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    valueText = _useState2[0],\n    setValueText = _useState2[1];\n  useEffect(function () {\n    var _textInputRef$current;\n    (_textInputRef$current = textInputRef.current) == null ? void 0 : _textInputRef$current.focus();\n  }, []);\n  if (!fontLoaded) {\n    return null;\n  }\n  ;\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(TouchableOpacity, {\n        style: {\n          paddingHorizontal: 4,\n          paddingVertical: 4,\n          marginLeft: -4\n        },\n        children: _jsxDEV(FontAwesomeIcon, {\n          icon: faXmark,\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, _this), _jsxDEV(Text, {\n        style: styles.textHeader,\n        children: \"\\u0110\\u0103ng b\\xE0i\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, _this), _jsxDEV(TouchableOpacity, {\n        style: [styles.btnPost, valueText ? {\n          backgroundColor: '2099ee'\n        } : {}],\n        children: _jsxDEV(Text, {\n          style: [styles.textBtn, valueText ? {\n            color: '#fff'\n          } : {}],\n          children: \"\\u0110\\u0103ng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, _this), _jsxDEV(View, {\n      style: styles.ctnUser,\n      children: [_jsxDEV(Image, {\n        source: userImage,\n        resizeMode: \"cover\",\n        style: styles.imgUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, _this), _jsxDEV(View, {\n        style: styles.ctnInfor,\n        children: [_jsxDEV(Text, {\n          style: styles.textName,\n          children: \"Bad liar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, _this), _jsxDEV(View, {\n          style: styles.ctnRole,\n          children: _jsxDEV(Text, {\n            style: styles.textRole,\n            children: \"Th\\xE0nh vi\\xEAn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, _this), _jsxDEV(View, {\n      style: styles.ctnInput,\n      children: _jsxDEV(TextInput, {\n        ref: textInputRef,\n        placeholder: \"\\u0110\\u1EB7t c\\xE2u h\\u1ECFi cho c\\u1ED9ng \\u0111\\u1ED3ng...\",\n        placeholderTextColor: '#65676b',\n        style: styles.input,\n        numberOfLines: 4,\n        onChangeText: function onChangeText(text) {\n          return setValueText(text);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, _this);\n};\nexport default CreatePost;",
    "map": {
        "version": 3,
        "names": [
            "faXmark",
            "FontAwesomeIcon",
            "React",
            "useEffect",
            "useRef",
            "useState",
            "Image",
            "Text",
            "TextInput",
            "TouchableOpacity",
            "View",
            "styles",
            "useFonts",
            "jsxDEV",
            "_jsxDEV",
            "userImage",
            "require",
            "CreatePost",
            "textInputRef",
            "_useFonts",
            "_useFonts2",
            "_slicedToArray",
            "fontLoaded",
            "_useState",
            "_useState2",
            "valueText",
            "setValueText",
            "_textInputRef$current",
            "current",
            "focus",
            "style",
            "container",
            "children",
            "header",
            "paddingHorizontal",
            "paddingVertical",
            "marginLeft",
            "icon",
            "size",
            "fileName",
            "_jsxFileName",
            "lineNumber",
            "columnNumber",
            "_this",
            "textHeader",
            "btnPost",
            "backgroundColor",
            "textBtn",
            "color",
            "ctnUser",
            "source",
            "resizeMode",
            "imgUser",
            "ctnInfor",
            "textName",
            "ctnRole",
            "textRole",
            "ctnInput",
            "ref",
            "placeholder",
            "placeholderTextColor",
            "input",
            "numberOfLines",
            "onChangeText",
            "text"
        ],
        "sources": ["D:/React Native/MAD/cook-app/src/layouts/CreatePost/CreatePost.tsx"],
        "sourcesContent": [
            "import { faXmark } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { Image, Keyboard, Text, TextInput, TouchableOpacity, View } from 'react-native';\r\n\r\nimport styles from './style';\r\nimport { useFonts } from 'expo-font';\r\nconst userImage = require('../../../assets/images/user.png');\r\n\r\nconst CreatePost : React.FC = () => {\r\n    const textInputRef = useRef<TextInput>(null);\r\n    const [fontLoaded] = useFonts({\r\n        'Inconsolata-Bold': require('../../../assets/fonts/Inconsolata-Bold.ttf'),\r\n        'Inconsolata-Medium': require('../../../assets/fonts/Inconsolata-Medium.ttf'),\r\n    });\r\n    const [valueText, setValueText] = useState('');\r\n\r\n    useEffect(() => {\r\n        textInputRef.current?.focus();\r\n    }, []);\r\n\r\n    if (!fontLoaded) {\r\n        return null;\r\n    };\r\n\r\n    return (\r\n        <View style = {styles.container}>\r\n            <View style = {styles.header}>\r\n                <TouchableOpacity\r\n                    style = {{paddingHorizontal: 4, paddingVertical: 4, marginLeft: -4}}\r\n                >\r\n                    <FontAwesomeIcon icon = {faXmark} size={24}/>\r\n                </TouchableOpacity>\r\n\r\n                <Text style = {styles.textHeader}>Đăng bài</Text>\r\n\r\n                <TouchableOpacity style = {[styles.btnPost, valueText ? {backgroundColor: '2099ee'} : {}]}>\r\n                    <Text style = {[styles.textBtn, valueText ? {color: '#fff'} : {}]}>Đăng</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n\r\n            <View style = {styles.ctnUser}>\r\n                <Image source={userImage} resizeMode='cover' style = {styles.imgUser}/>\r\n                <View style = {styles.ctnInfor}>\r\n                    <Text style = {styles.textName}>Bad liar</Text>\r\n                    <View style = {styles.ctnRole}>\r\n                        <Text style = {styles.textRole}>Thành viên</Text>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n\r\n            <View style = {styles.ctnInput}>\r\n                <TextInput \r\n                    ref = {textInputRef}\r\n                    placeholder='Đặt câu hỏi cho cộng đồng...'  \r\n                    placeholderTextColor={'#65676b'}  \r\n                    style = {styles.input}\r\n                    numberOfLines={4}\r\n                    onChangeText={(text) => setValueText(text)}\r\n                />\r\n            </View>\r\n\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default CreatePost;"
        ],
        "mappings": "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"
    },
    "metadata": {},
    "sourceType": "module",
    "externalDependencies": []
}
