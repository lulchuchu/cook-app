{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\React Native\\\\MAD\\\\cook-app\\\\src\\\\layouts\\\\SelectDiet\\\\Diet.tsx\",\n  _this = this;\nimport React, { useState } from 'react';\nimport { useFonts } from 'expo-font';\nimport Item1 from \"../../components/SelectDiet/Item1\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar message = require(\"../../../assets/images/message.png\");\nvar Diet = function Diet() {\n  var _useFonts = useFonts({\n      'Inconsolata-Bold': require(\"../../../assets/fonts/Inconsolata-Bold.ttf\"),\n      'Inconsolata': require(\"../../../assets/fonts/Inconsolata-Medium.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontLoaded = _useFonts2[0];\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showItem1 = _useState2[0],\n    setShowItem1 = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showItem2 = _useState4[0],\n    setShowItem2 = _useState4[1];\n  var handleClick = function handleClick() {\n    setShowItem1(true);\n  };\n  if (!fontLoaded) {\n    return null;\n  }\n  return _jsxDEV(Item1, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, _this);\n};\nexport default Diet;","map":{"version":3,"names":["React","useState","useFonts","Item1","jsxDEV","_jsxDEV","message","require","Diet","_useFonts","_useFonts2","_slicedToArray","fontLoaded","_useState","_useState2","showItem1","setShowItem1","_useState3","_useState4","showItem2","setShowItem2","handleClick","fileName","_jsxFileName","lineNumber","columnNumber","_this"],"sources":["D:/React Native/MAD/cook-app/src/layouts/SelectDiet/Diet.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Image, Text, TouchableOpacity, View } from 'react-native';\nimport { useFonts } from 'expo-font';\nimport { faCircleXmark } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\n\nimport styles from './styles';\nimport Item1 from '../../components/SelectDiet/Item1';\nimport Item2 from '../../components/SelectDiet/Item2';\nconst message = require('../../../assets/images/message.png');\n\n\nconst Diet: React.FC = () => {\n    const [fontLoaded] = useFonts({\n        'Inconsolata-Bold': require('../../../assets/fonts/Inconsolata-Bold.ttf'),\n        'Inconsolata': require('../../../assets/fonts/Inconsolata-Medium.ttf'),\n    });\n\n    const [showItem1, setShowItem1] = useState(false);\n    const [showItem2, setShowItem2] = useState(false);\n\n    const handleClick = () => {\n        setShowItem1(true);\n    }\n\n    if (!fontLoaded) {\n        return null;\n    }\n    return (\n        <Item1/>\n    );\n\n    // return showItem1 || showItem2 ? (\n    //     showItem1 ? <Item1/> : <Item2/>\n    // ) : (\n    //     <View style={styles.container}>\n    //         <View style={styles.header}>\n    //             <TouchableOpacity style={styles.iconClose}>\n    //                 <FontAwesomeIcon icon={faCircleXmark} size={26} color=\"#656361\" />\n    //             </TouchableOpacity>\n\n    //             <Text style={styles.textHeader}>Có gì mới?</Text>\n    //         </View>\n\n    //         <View style={styles.ctnImg}>\n    //             <Image source={message} resizeMode=\"cover\" style={styles.image} />\n    //         </View>\n\n    //         <View style={styles.ctnText}>\n    //             <Text style={styles.text1}>Khám phá công thức nấu ăn theo sở thích của bạn!</Text>\n    //             <Text style={styles.text2}>Có được công thức nấu ăn cá nhân của riêng bạn chỉ trong 10 giây.</Text>\n    //         </View>\n\n    //         <View style={styles.ctnButton}>\n    //             <TouchableOpacity style={styles.button} onPress={handleClick}>\n    //                 <Text style={styles.textBtn}>Bắt đầu</Text>\n    //             </TouchableOpacity>\n    //         </View>\n    //     </View>\n    // );\n};\n\nexport default Diet;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,QAAQ,QAAQ,WAAW;AAKpC,OAAOC,KAAK;AAA0C,SAAAC,MAAA,IAAAC,OAAA;AAEtD,IAAMC,OAAO,GAAGC,OAAO,qCAAqC,CAAC;AAG7D,IAAMC,IAAc,GAAG,SAAjBA,IAAcA,CAAA,EAAS;EACzB,IAAAC,SAAA,GAAqBP,QAAQ,CAAC;MAC1B,kBAAkB,EAAEK,OAAO,6CAA6C,CAAC;MACzE,aAAa,EAAEA,OAAO,+CAA+C;IACzE,CAAC,CAAC;IAAAG,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAHKG,UAAU,GAAAF,UAAA;EAKjB,IAAAG,SAAA,GAAkCZ,QAAQ,CAAC,KAAK,CAAC;IAAAa,UAAA,GAAAH,cAAA,CAAAE,SAAA;IAA1CE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAC9B,IAAAG,UAAA,GAAkChB,QAAQ,CAAC,KAAK,CAAC;IAAAiB,UAAA,GAAAP,cAAA,CAAAM,UAAA;IAA1CE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAE9B,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACtBL,YAAY,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,IAAI,CAACJ,UAAU,EAAE;IACb,OAAO,IAAI;EACf;EACA,OACIP,OAAA,CAACF,KAAK;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KAAC,CAAC;AA+BhB,CAAC;AAED,eAAelB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}