{
    "ast": null,
    "code": "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\React Native\\\\MAD\\\\cook-app\\\\src\\\\components\\\\RecipeCard\\\\RecipeCard.tsx\",\n  _this = this;\nimport React, { useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport styles from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar background = require(\"../../../assets/images/home_bg.jpeg\");\nvar RecipeCard = function RecipeCard() {\n  var _useState = useState([{\n      uri: require(\"../../../assets/images/chef.png\")\n    }, {\n      uri: require(\"../../../assets/images/chef.png\")\n    }, {\n      uri: require(\"../../../assets/images/chef.png\")\n    }, {\n      uri: require(\"../../../assets/images/chef.png\")\n    }, {\n      uri: require(\"../../../assets/images/chef.png\")\n    }]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var renderCard = function renderCard(_ref) {\n    var item = _ref.item;\n    return _jsxDEV(View, {\n      style: styles.itemRecipe,\n      children: [_jsxDEV(Image, {\n        source: background,\n        style: styles.imgRecipe,\n        resizeMode: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, _this), _jsxDEV(Text, {\n        style: styles.nameRecipe,\n        children: \"Ph\\u1EDF Vi\\u1EC7t Nam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, _this), _jsxDEV(View, {\n        style: styles.ctnChef,\n        children: [_jsxDEV(Image, {\n          source: {\n            uri: item.uri\n          },\n          style: styles.imgChef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, _this), _jsxDEV(Text, {\n          style: styles.nameChef,\n          children: \"Kitchen stories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, _this);\n  };\n  return _jsxDEV(View, {\n    children: _jsxDEV(FlatList, {\n      data: data,\n      renderItem: renderCard,\n      horizontal: true,\n      showsHorizontalScrollIndicator: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, _this);\n};\nexport default RecipeCard;",
    "map": {
        "version": 3,
        "names": [
            "React",
            "useState",
            "FlatList",
            "Image",
            "Text",
            "View",
            "styles",
            "jsxDEV",
            "_jsxDEV",
            "background",
            "require",
            "RecipeCard",
            "_useState",
            "uri",
            "_useState2",
            "_slicedToArray",
            "data",
            "setData",
            "renderCard",
            "_ref",
            "item",
            "style",
            "itemRecipe",
            "children",
            "source",
            "imgRecipe",
            "resizeMode",
            "fileName",
            "_jsxFileName",
            "lineNumber",
            "columnNumber",
            "_this",
            "nameRecipe",
            "ctnChef",
            "imgChef",
            "nameChef",
            "renderItem",
            "horizontal",
            "showsHorizontalScrollIndicator"
        ],
        "sources": ["D:/React Native/MAD/cook-app/src/components/RecipeCard/RecipeCard.tsx"],
        "sourcesContent": [
            "import React, { useState } from 'react';\r\nimport { FlatList, Image, Text, View } from 'react-native';\r\n\r\nimport styles from './styles';\r\nconst background = require('../../../assets/images/home_bg.jpeg');\r\n\r\ninterface Item {\r\n    uri: string;\r\n}\r\n\r\nconst RecipeCard : React.FC = () => {\r\n\r\n    const [data, setData]  = useState<Item[]>([\r\n        {uri: require('../../../assets/images/chef.png')},\r\n        {uri: require('../../../assets/images/chef.png')},\r\n        {uri: require('../../../assets/images/chef.png')},\r\n        {uri: require('../../../assets/images/chef.png')},\r\n        {uri: require('../../../assets/images/chef.png')}\r\n    ]);\r\n\r\n    const renderCard = ({item} : {item: Item}) =>{\r\n        return (\r\n            <View style={styles.itemRecipe}>\r\n                <Image source={background} style={styles.imgRecipe} resizeMode=\"cover\" />\r\n                <Text style={styles.nameRecipe}>Phở Việt Nam</Text>\r\n                <View style={styles.ctnChef}>\r\n                    <Image source={{uri: item.uri}} style={styles.imgChef} />\r\n                    <Text style={styles.nameChef}>Kitchen stories</Text>\r\n                </View>\r\n            </View>\r\n        )\r\n    };\r\n    return (\r\n        <View>\r\n            <FlatList \r\n                data = {data}\r\n                renderItem = {renderCard}\r\n                horizontal\r\n                showsHorizontalScrollIndicator = {false}\r\n            />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default RecipeCard;"
        ],
        "mappings": ";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,QAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAGxC,OAAOC,MAAM;AAAiB,SAAAC,MAAA,IAAAC,OAAA;AAC9B,IAAMC,UAAU,GAAGC,OAAO,sCAAsC,CAAC;AAMjE,IAAMC,UAAqB,GAAG,SAAxBA,UAAqBA,CAAA,EAAS;EAEhC,IAAAC,SAAA,GAAyBX,QAAQ,CAAS,CACtC;MAACY,GAAG,EAAEH,OAAO,kCAAkC;IAAC,CAAC,EACjD;MAACG,GAAG,EAAEH,OAAO,kCAAkC;IAAC,CAAC,EACjD;MAACG,GAAG,EAAEH,OAAO,kCAAkC;IAAC,CAAC,EACjD;MAACG,GAAG,EAAEH,OAAO,kCAAkC;IAAC,CAAC,EACjD;MAACG,GAAG,EAAEH,OAAO,kCAAkC;IAAC,CAAC,CACpD,CAAC;IAAAI,UAAA,GAAAC,cAAA,CAAAH,SAAA;IANKI,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EAQpB,IAAMI,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA,EAA6B;IAAA,IAAxBC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IACrB,OACIZ,OAAA,CAACH,IAAI;MAACgB,KAAK,EAAEf,MAAM,CAACgB,UAAW;MAAAC,QAAA,GAC3Bf,OAAA,CAACL,KAAK;QAACqB,MAAM,EAAEf,UAAW;QAACY,KAAK,EAAEf,MAAM,CAACmB,SAAU;QAACC,UAAU,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAE,CAAC,EACzEvB,OAAA,CAACJ,IAAI;QAACiB,KAAK,EAAEf,MAAM,CAAC0B,UAAW;QAAAT,QAAA,EAAC;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAAM,CAAC,EACnDvB,OAAA,CAACH,IAAI;QAACgB,KAAK,EAAEf,MAAM,CAAC2B,OAAQ;QAAAV,QAAA,GACxBf,OAAA,CAACL,KAAK;UAACqB,MAAM,EAAE;YAACX,GAAG,EAAEO,IAAI,CAACP;UAAG,CAAE;UAACQ,KAAK,EAAEf,MAAM,CAAC4B;QAAQ;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAE,CAAC,EACzDvB,OAAA,CAACJ,IAAI;UAACiB,KAAK,EAAEf,MAAM,CAAC6B,QAAS;UAAAZ,QAAA,EAAC;QAAe;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAC,KAAM,CAAC;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAC,KAClD,CAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KACL,CAAC;EAEf,CAAC;EACD,OACIvB,OAAA,CAACH,IAAI;IAAAkB,QAAA,EACDf,OAAA,CAACN,QAAQ;MACLc,IAAI,EAAIA,IAAK;MACboB,UAAU,EAAIlB,UAAW;MACzBmB,UAAU;MACVC,8BAA8B,EAAI;IAAM;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,GAAAC,KAC3C;EAAC;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KACA,CAAC;AAEf,CAAC;AAED,eAAepB,UAAU"
    },
    "metadata": {},
    "sourceType": "module",
    "externalDependencies": []
}
