{
    "ast": null,
    "code": "import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport NativeRNShare from \"../codegenSpec/NativeRNShare\";\nimport Overlay from \"./components/Overlay\";\nimport Sheet from \"./components/Sheet\";\nimport Button from \"./components/Button\";\nimport ShareSheet from \"./components/ShareSheet\";\nimport checkPermissions from \"./helpers/checkPermissions\";\nimport { Social, ShareAsset } from \"./types\";\nimport { isAndroid, isIOS } from \"./helpers/platform\";\nimport { normalizeShareOpenOptions, normalizeSingleShareOptions } from \"./helpers/options\";\nvar RNShare = {\n  Button: Button,\n  ShareSheet: ShareSheet,\n  Overlay: Overlay,\n  Sheet: Sheet,\n  Social: {\n    FACEBOOK: NativeRNShare.getConstants().FACEBOOK || Social.Facebook,\n    FACEBOOK_STORIES: NativeRNShare.getConstants().FACEBOOKSTORIES || Social.FacebookStories,\n    PAGESMANAGER: NativeRNShare.getConstants().PAGESMANAGER || Social.Pagesmanager,\n    TWITTER: NativeRNShare.getConstants().TWITTER || Social.Twitter,\n    WHATSAPP: NativeRNShare.getConstants().WHATSAPP || Social.Whatsapp,\n    WHATSAPPBUSINESS: NativeRNShare.getConstants().WHATSAPPBUSINESS || Social.Whatsappbusiness,\n    INSTAGRAM: NativeRNShare.getConstants().INSTAGRAM || Social.Instagram,\n    INSTAGRAM_STORIES: NativeRNShare.getConstants().INSTAGRAMSTORIES || Social.InstagramStories,\n    GOOGLEPLUS: NativeRNShare.getConstants().GOOGLEPLUS || Social.Googleplus,\n    EMAIL: NativeRNShare.getConstants().EMAIL || Social.Email,\n    PINTEREST: NativeRNShare.getConstants().PINTEREST || Social.Pinterest,\n    LINKEDIN: NativeRNShare.getConstants().LINKEDIN || Social.Linkedin,\n    SMS: NativeRNShare.getConstants().SMS || Social.Sms,\n    TELEGRAM: NativeRNShare.getConstants().TELEGRAM || Social.Telegram,\n    MESSENGER: NativeRNShare.getConstants().MESSENGER || Social.Messenger,\n    SNAPCHAT: NativeRNShare.getConstants().SNAPCHAT || Social.Snapchat,\n    VIBER: NativeRNShare.getConstants().VIBER || Social.Viber\n  },\n  open: function () {\n    var _open = _asyncToGenerator(function* (options) {\n      yield checkPermissions(options);\n      options = normalizeShareOpenOptions(options);\n      var result = yield NativeRNShare.open(options);\n      if (!result.success) {\n        if (options.failOnCancel) {\n          throw new Error('User did not share');\n        }\n        var dismissedResult = {\n          dismissedAction: true,\n          success: result.success,\n          message: result.message\n        };\n        return dismissedResult;\n      }\n      return result;\n    });\n    function open(_x) {\n      return _open.apply(this, arguments);\n    }\n    return open;\n  }(),\n  shareSingle: function () {\n    var _shareSingle = _asyncToGenerator(function* (options) {\n      if (!isAndroid() && !isIOS()) throw new Error('Not implemented');\n      if (options.social === RNShare.Social.INSTAGRAM_STORIES && !options.appId) {\n        throw new Error('To share to Instagram Stories you need to provide appId');\n      }\n      yield checkPermissions(options);\n      options = normalizeSingleShareOptions(options);\n      var _yield$NativeRNShare$ = yield NativeRNShare.shareSingle(options),\n        success = _yield$NativeRNShare$.success,\n        message = _yield$NativeRNShare$.message;\n      var result = {\n        success: Boolean(success),\n        message: message\n      };\n      return result;\n    });\n    function shareSingle(_x2) {\n      return _shareSingle.apply(this, arguments);\n    }\n    return shareSingle;\n  }(),\n  isPackageInstalled: function () {\n    var _isPackageInstalled = _asyncToGenerator(function* (packageName) {\n      if (!isAndroid()) throw new Error('Not implemented');\n      var isInstalled = yield NativeRNShare.isPackageInstalled(packageName);\n      var result = {\n        isInstalled: isInstalled,\n        message: 'Package is Installed'\n      };\n      return result;\n    });\n    function isPackageInstalled(_x3) {\n      return _isPackageInstalled.apply(this, arguments);\n    }\n    return isPackageInstalled;\n  }()\n};\nexport { Overlay, Sheet, Button, ShareSheet, ShareAsset, Social };\nexport default RNShare;",
    "map": {
        "version": 3,
        "names": [
            "NativeRNShare",
            "Overlay",
            "Sheet",
            "Button",
            "ShareSheet",
            "checkPermissions",
            "Social",
            "ShareAsset",
            "isAndroid",
            "isIOS",
            "normalizeShareOpenOptions",
            "normalizeSingleShareOptions",
            "RNShare",
            "FACEBOOK",
            "getConstants",
            "Facebook",
            "FACEBOOK_STORIES",
            "FACEBOOKSTORIES",
            "FacebookStories",
            "PAGESMANAGER",
            "Pagesmanager",
            "TWITTER",
            "Twitter",
            "WHATSAPP",
            "Whatsapp",
            "WHATSAPPBUSINESS",
            "Whatsappbusiness",
            "INSTAGRAM",
            "Instagram",
            "INSTAGRAM_STORIES",
            "INSTAGRAMSTORIES",
            "InstagramStories",
            "GOOGLEPLUS",
            "Googleplus",
            "EMAIL",
            "Email",
            "PINTEREST",
            "Pinterest",
            "LINKEDIN",
            "Linkedin",
            "SMS",
            "Sms",
            "TELEGRAM",
            "Telegram",
            "MESSENGER",
            "Messenger",
            "SNAPCHAT",
            "Snapchat",
            "VIBER",
            "Viber",
            "open",
            "_open",
            "_asyncToGenerator",
            "options",
            "result",
            "success",
            "failOnCancel",
            "Error",
            "dismissedResult",
            "dismissedAction",
            "message",
            "_x",
            "apply",
            "arguments",
            "shareSingle",
            "_shareSingle",
            "social",
            "appId",
            "_yield$NativeRNShare$",
            "Boolean",
            "_x2",
            "isPackageInstalled",
            "_isPackageInstalled",
            "packageName",
            "isInstalled",
            "_x3"
        ],
        "sources": ["D:\\React Native\\MAD\\cook-app\\node_modules\\react-native-share\\src\\index.tsx"],
        "sourcesContent": [
            "import NativeRNShare from '../codegenSpec/NativeRNShare';\n\nimport Overlay from './components/Overlay';\nimport Sheet from './components/Sheet';\nimport Button from './components/Button';\nimport ShareSheet from './components/ShareSheet';\nimport checkPermissions from './helpers/checkPermissions';\nimport {\n  Social,\n  IsPackageInstalledResult,\n  ActivityType,\n  ShareAsset,\n  ShareOpenResult,\n  ShareOptions,\n  ShareSingleOptions,\n  ShareSingleResult,\n} from './types';\nimport { isAndroid, isIOS } from './helpers/platform';\nimport { normalizeShareOpenOptions, normalizeSingleShareOptions } from './helpers/options';\n\nconst RNShare = {\n  Button,\n  ShareSheet,\n  Overlay,\n  Sheet,\n\n  Social: {\n    FACEBOOK: NativeRNShare.getConstants().FACEBOOK || Social.Facebook,\n    FACEBOOK_STORIES: NativeRNShare.getConstants().FACEBOOKSTORIES || Social.FacebookStories,\n    PAGESMANAGER: NativeRNShare.getConstants().PAGESMANAGER || Social.Pagesmanager,\n    TWITTER: NativeRNShare.getConstants().TWITTER || Social.Twitter,\n    WHATSAPP: NativeRNShare.getConstants().WHATSAPP || Social.Whatsapp,\n    WHATSAPPBUSINESS: NativeRNShare.getConstants().WHATSAPPBUSINESS || Social.Whatsappbusiness,\n    INSTAGRAM: NativeRNShare.getConstants().INSTAGRAM || Social.Instagram,\n    INSTAGRAM_STORIES: NativeRNShare.getConstants().INSTAGRAMSTORIES || Social.InstagramStories,\n    GOOGLEPLUS: NativeRNShare.getConstants().GOOGLEPLUS || Social.Googleplus,\n    EMAIL: NativeRNShare.getConstants().EMAIL || Social.Email,\n    PINTEREST: NativeRNShare.getConstants().PINTEREST || Social.Pinterest,\n    LINKEDIN: NativeRNShare.getConstants().LINKEDIN || Social.Linkedin,\n    SMS: NativeRNShare.getConstants().SMS || Social.Sms,\n    TELEGRAM: NativeRNShare.getConstants().TELEGRAM || Social.Telegram,\n    MESSENGER: NativeRNShare.getConstants().MESSENGER || Social.Messenger,\n    SNAPCHAT: NativeRNShare.getConstants().SNAPCHAT || Social.Snapchat,\n    VIBER: NativeRNShare.getConstants().VIBER || Social.Viber,\n  },\n\n  async open(options: ShareOptions) {\n    await checkPermissions(options);\n\n    options = normalizeShareOpenOptions(options);\n\n    const result: ShareOpenResult = await NativeRNShare.open(options);\n\n    if (!result.success) {\n      if (options.failOnCancel) {\n        throw new Error('User did not share');\n      }\n\n      const dismissedResult: ShareOpenResult = {\n        dismissedAction: true,\n        success: result.success,\n        message: result.message,\n      };\n      return dismissedResult;\n    }\n\n    return result;\n  },\n\n  async shareSingle(options: ShareSingleOptions) {\n    if (!isAndroid() && !isIOS()) throw new Error('Not implemented');\n\n    if (options.social === RNShare.Social.INSTAGRAM_STORIES && !options.appId) {\n      throw new Error('To share to Instagram Stories you need to provide appId');\n    }\n\n    await checkPermissions(options);\n\n    options = normalizeSingleShareOptions(options);\n\n    const { success, message } = await NativeRNShare.shareSingle(options);\n\n    const result: ShareSingleResult = {\n      success: Boolean(success),\n      message,\n    };\n\n    return result;\n  },\n\n  async isPackageInstalled(packageName: string) {\n    if (!isAndroid()) throw new Error('Not implemented');\n\n    const isInstalled = await NativeRNShare.isPackageInstalled(packageName);\n\n    const result: IsPackageInstalledResult = {\n      isInstalled,\n      message: 'Package is Installed',\n    };\n\n    return result;\n  },\n} as const;\n\nexport { Overlay, Sheet, Button, ShareSheet, ShareAsset, Social };\nexport type { ShareSingleOptions, ShareOptions, ActivityType, IsPackageInstalledResult };\nexport type { OverlayProps } from './components/Overlay';\nexport type { SheetProps } from './components/Sheet';\nexport type { ButtonProps } from './components/Button';\nexport type { ShareSheetProps } from './components/ShareSheet';\nexport default RNShare;\n"
        ],
        "mappings": ";AAAA,OAAOA,aAAa;AAEpB,OAAOC,OAAO;AACd,OAAOC,KAAK;AACZ,OAAOC,MAAM;AACb,OAAOC,UAAU;AACjB,OAAOC,gBAAgB;AACvB,SACEC,MAAM,EAGNC,UAAU;AAMZ,SAASC,SAAS,EAAEC,KAAK;AACzB,SAASC,yBAAyB,EAAEC,2BAA2B;AAE/D,IAAMC,OAAO,GAAG;EACdT,MAAM,EAANA,MAAM;EACNC,UAAU,EAAVA,UAAU;EACVH,OAAO,EAAPA,OAAO;EACPC,KAAK,EAALA,KAAK;EAELI,MAAM,EAAE;IACNO,QAAQ,EAAEb,aAAa,CAACc,YAAY,CAAC,CAAC,CAACD,QAAQ,IAAIP,MAAM,CAACS,QAAQ;IAClEC,gBAAgB,EAAEhB,aAAa,CAACc,YAAY,CAAC,CAAC,CAACG,eAAe,IAAIX,MAAM,CAACY,eAAe;IACxFC,YAAY,EAAEnB,aAAa,CAACc,YAAY,CAAC,CAAC,CAACK,YAAY,IAAIb,MAAM,CAACc,YAAY;IAC9EC,OAAO,EAAErB,aAAa,CAACc,YAAY,CAAC,CAAC,CAACO,OAAO,IAAIf,MAAM,CAACgB,OAAO;IAC/DC,QAAQ,EAAEvB,aAAa,CAACc,YAAY,CAAC,CAAC,CAACS,QAAQ,IAAIjB,MAAM,CAACkB,QAAQ;IAClEC,gBAAgB,EAAEzB,aAAa,CAACc,YAAY,CAAC,CAAC,CAACW,gBAAgB,IAAInB,MAAM,CAACoB,gBAAgB;IAC1FC,SAAS,EAAE3B,aAAa,CAACc,YAAY,CAAC,CAAC,CAACa,SAAS,IAAIrB,MAAM,CAACsB,SAAS;IACrEC,iBAAiB,EAAE7B,aAAa,CAACc,YAAY,CAAC,CAAC,CAACgB,gBAAgB,IAAIxB,MAAM,CAACyB,gBAAgB;IAC3FC,UAAU,EAAEhC,aAAa,CAACc,YAAY,CAAC,CAAC,CAACkB,UAAU,IAAI1B,MAAM,CAAC2B,UAAU;IACxEC,KAAK,EAAElC,aAAa,CAACc,YAAY,CAAC,CAAC,CAACoB,KAAK,IAAI5B,MAAM,CAAC6B,KAAK;IACzDC,SAAS,EAAEpC,aAAa,CAACc,YAAY,CAAC,CAAC,CAACsB,SAAS,IAAI9B,MAAM,CAAC+B,SAAS;IACrEC,QAAQ,EAAEtC,aAAa,CAACc,YAAY,CAAC,CAAC,CAACwB,QAAQ,IAAIhC,MAAM,CAACiC,QAAQ;IAClEC,GAAG,EAAExC,aAAa,CAACc,YAAY,CAAC,CAAC,CAAC0B,GAAG,IAAIlC,MAAM,CAACmC,GAAG;IACnDC,QAAQ,EAAE1C,aAAa,CAACc,YAAY,CAAC,CAAC,CAAC4B,QAAQ,IAAIpC,MAAM,CAACqC,QAAQ;IAClEC,SAAS,EAAE5C,aAAa,CAACc,YAAY,CAAC,CAAC,CAAC8B,SAAS,IAAItC,MAAM,CAACuC,SAAS;IACrEC,QAAQ,EAAE9C,aAAa,CAACc,YAAY,CAAC,CAAC,CAACgC,QAAQ,IAAIxC,MAAM,CAACyC,QAAQ;IAClEC,KAAK,EAAEhD,aAAa,CAACc,YAAY,CAAC,CAAC,CAACkC,KAAK,IAAI1C,MAAM,CAAC2C;EACtD,CAAC;EAEKC,IAAI;IAAA,IAAAC,KAAA,GAAAC,iBAAA,YAACC,OAAqB,EAAE;MAChC,MAAMhD,gBAAgB,CAACgD,OAAO,CAAC;MAE/BA,OAAO,GAAG3C,yBAAyB,CAAC2C,OAAO,CAAC;MAE5C,IAAMC,MAAuB,SAAStD,aAAa,CAACkD,IAAI,CAACG,OAAO,CAAC;MAEjE,IAAI,CAACC,MAAM,CAACC,OAAO,EAAE;QACnB,IAAIF,OAAO,CAACG,YAAY,EAAE;UACxB,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;QACvC;QAEA,IAAMC,eAAgC,GAAG;UACvCC,eAAe,EAAE,IAAI;UACrBJ,OAAO,EAAED,MAAM,CAACC,OAAO;UACvBK,OAAO,EAAEN,MAAM,CAACM;QAClB,CAAC;QACD,OAAOF,eAAe;MACxB;MAEA,OAAOJ,MAAM;IACf,CAAC;IAAA,SAAAJ,KAAAW,EAAA;MAAA,OAAAV,KAAA,CAAAW,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAb,IAAA;EAAA;EAEKc,WAAW;IAAA,IAAAC,YAAA,GAAAb,iBAAA,YAACC,OAA2B,EAAE;MAC7C,IAAI,CAAC7C,SAAS,CAAC,CAAC,IAAI,CAACC,KAAK,CAAC,CAAC,EAAE,MAAM,IAAIgD,KAAK,CAAC,iBAAiB,CAAC;MAEhE,IAAIJ,OAAO,CAACa,MAAM,KAAKtD,OAAO,CAACN,MAAM,CAACuB,iBAAiB,IAAI,CAACwB,OAAO,CAACc,KAAK,EAAE;QACzE,MAAM,IAAIV,KAAK,CAAC,yDAAyD,CAAC;MAC5E;MAEA,MAAMpD,gBAAgB,CAACgD,OAAO,CAAC;MAE/BA,OAAO,GAAG1C,2BAA2B,CAAC0C,OAAO,CAAC;MAE9C,IAAAe,qBAAA,SAAmCpE,aAAa,CAACgE,WAAW,CAACX,OAAO,CAAC;QAA7DE,OAAO,GAAAa,qBAAA,CAAPb,OAAO;QAAEK,OAAA,GAAAQ,qBAAA,CAAAR,OAAA;MAEjB,IAAMN,MAAyB,GAAG;QAChCC,OAAO,EAAEc,OAAO,CAACd,OAAO,CAAC;QACzBK,OAAA,EAAAA;MACF,CAAC;MAED,OAAON,MAAM;IACf,CAAC;IAAA,SAAAU,YAAAM,GAAA;MAAA,OAAAL,YAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAC,WAAA;EAAA;EAEKO,kBAAkB;IAAA,IAAAC,mBAAA,GAAApB,iBAAA,YAACqB,WAAmB,EAAE;MAC5C,IAAI,CAACjE,SAAS,CAAC,CAAC,EAAE,MAAM,IAAIiD,KAAK,CAAC,iBAAiB,CAAC;MAEpD,IAAMiB,WAAW,SAAS1E,aAAa,CAACuE,kBAAkB,CAACE,WAAW,CAAC;MAEvE,IAAMnB,MAAgC,GAAG;QACvCoB,WAAW,EAAXA,WAAW;QACXd,OAAO,EAAE;MACX,CAAC;MAED,OAAON,MAAM;IACf;IAAA,SAAAiB,mBAAAI,GAAA;MAAA,OAAAH,mBAAA,CAAAV,KAAA,OAAAC,SAAA;IAAA;IAAA,OAAAQ,kBAAA;EAAA;AACF,CAAU;AAEV,SAAStE,OAAO,EAAEC,KAAK,EAAEC,MAAM,EAAEC,UAAU,EAAEG,UAAU,EAAED,MAAM;AAM/D,eAAeM,OAAO"
    },
    "metadata": {},
    "sourceType": "module",
    "externalDependencies": []
}
