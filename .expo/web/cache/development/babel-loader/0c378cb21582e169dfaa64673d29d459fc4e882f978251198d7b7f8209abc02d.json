{
    "ast": null,
    "code": "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\React Native\\\\MAD\\\\cook-app\\\\src\\\\layouts\\\\CreatePost\\\\CreatePost.tsx\",\n  _this = this;\nimport { faXmark } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport React, { useEffect, useRef, useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport styles from \"./style\";\nimport { useFonts } from 'expo-font';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar userImage = require(\"../../../assets/images/user.png\");\nvar CreatePost = function CreatePost(_ref) {\n  var cancel = _ref.cancel;\n  var textInputRef = useRef(null);\n  var _useFonts = useFonts({\n      'Inconsolata-Bold': require(\"../../../assets/fonts/Inconsolata-Bold.ttf\"),\n      'Inconsolata-Medium': require(\"../../../assets/fonts/Inconsolata-Medium.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontLoaded = _useFonts2[0];\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    valueText = _useState2[0],\n    setValueText = _useState2[1];\n  useEffect(function () {\n    var _textInputRef$current;\n    (_textInputRef$current = textInputRef.current) == null ? void 0 : _textInputRef$current.focus();\n  }, []);\n  if (!fontLoaded) {\n    return null;\n  }\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(TouchableOpacity, {\n        style: {\n          paddingHorizontal: 4,\n          paddingVertical: 4,\n          marginLeft: -4\n        },\n        onPress: cancel,\n        children: _jsxDEV(FontAwesomeIcon, {\n          icon: faXmark,\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, _this), _jsxDEV(Text, {\n        style: styles.textHeader,\n        children: \"\\u0110\\u0103ng b\\xE0i\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, _this), _jsxDEV(TouchableOpacity, {\n        style: [styles.btnPost, valueText ? {\n          backgroundColor: '#2099ee'\n        } : {}],\n        children: _jsxDEV(Text, {\n          style: [styles.textBtn, valueText ? {\n            color: '#fff'\n          } : {}],\n          children: \"\\u0110\\u0103ng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, _this), _jsxDEV(View, {\n      style: styles.ctnUser,\n      children: [_jsxDEV(Image, {\n        source: userImage,\n        resizeMode: \"cover\",\n        style: styles.imgUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, _this), _jsxDEV(View, {\n        style: styles.ctnInfor,\n        children: [_jsxDEV(Text, {\n          style: styles.textName,\n          children: \"Bad liar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, _this), _jsxDEV(View, {\n          style: styles.ctnRole,\n          children: _jsxDEV(Text, {\n            style: styles.textRole,\n            children: \"Th\\xE0nh vi\\xEAn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, _this), _jsxDEV(View, {\n      style: styles.ctnInput,\n      children: _jsxDEV(TextInput, {\n        ref: textInputRef,\n        placeholder: \"\\u0110\\u1EB7t c\\xE2u h\\u1ECFi cho c\\u1ED9ng \\u0111\\u1ED3ng...\",\n        placeholderTextColor: '#65676b',\n        style: styles.input,\n        numberOfLines: 4,\n        onChangeText: function onChangeText(text) {\n          return setValueText(text);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, _this);\n};\nexport default CreatePost;",
    "map": {
        "version": 3,
        "names": [
            "faXmark",
            "FontAwesomeIcon",
            "React",
            "useEffect",
            "useRef",
            "useState",
            "Image",
            "Text",
            "TextInput",
            "TouchableOpacity",
            "View",
            "styles",
            "useFonts",
            "jsxDEV",
            "_jsxDEV",
            "userImage",
            "require",
            "CreatePost",
            "_ref",
            "cancel",
            "textInputRef",
            "_useFonts",
            "_useFonts2",
            "_slicedToArray",
            "fontLoaded",
            "_useState",
            "_useState2",
            "valueText",
            "setValueText",
            "_textInputRef$current",
            "current",
            "focus",
            "style",
            "container",
            "children",
            "header",
            "paddingHorizontal",
            "paddingVertical",
            "marginLeft",
            "onPress",
            "icon",
            "size",
            "fileName",
            "_jsxFileName",
            "lineNumber",
            "columnNumber",
            "_this",
            "textHeader",
            "btnPost",
            "backgroundColor",
            "textBtn",
            "color",
            "ctnUser",
            "source",
            "resizeMode",
            "imgUser",
            "ctnInfor",
            "textName",
            "ctnRole",
            "textRole",
            "ctnInput",
            "ref",
            "placeholder",
            "placeholderTextColor",
            "input",
            "numberOfLines",
            "onChangeText",
            "text"
        ],
        "sources": ["D:/React Native/MAD/cook-app/src/layouts/CreatePost/CreatePost.tsx"],
        "sourcesContent": [
            "import { faXmark } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Alert, Image, Keyboard, Platform, Text, TextInput, TouchableOpacity, View } from 'react-native';\n\nimport styles from './style';\nimport { useFonts } from 'expo-font';\nconst userImage = require('../../../assets/images/user.png');\n\ntype Func = {\n    cancel: () => void;\n}\n\nconst CreatePost: React.FC<Func> = ({cancel}) => {\n    const textInputRef = useRef<TextInput>(null);\n    // const [heightKeyBoard, setHeightKeyboard] = useState(0);\n    const [fontLoaded] = useFonts({\n        'Inconsolata-Bold': require('../../../assets/fonts/Inconsolata-Bold.ttf'),\n        'Inconsolata-Medium': require('../../../assets/fonts/Inconsolata-Medium.ttf'),\n    });\n    const [valueText, setValueText] = useState('');\n\n    useEffect(() => {\n        textInputRef.current?.focus();\n        // const keyboardDidShowListener = Keyboard.addListener(\n        //     Platform.OS === 'android' ? 'keyboardDidShow' : 'keyboardWillShow',\n        //     (event) => {\n        //       setHeightKeyboard(event.endCoordinates.height);\n        //     }\n        //   );\n      \n        //   // Clean up listeners on component unmount\n        //   return () => {\n        //     keyboardDidShowListener.remove();\n        //   };\n    }, []);\n\n    if (!fontLoaded) {\n        return null;\n    }\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.header}>\n                <TouchableOpacity style={{ paddingHorizontal: 4, paddingVertical: 4, marginLeft: -4 }} onPress={cancel}>\n                    <FontAwesomeIcon icon={faXmark} size={24} />\n                </TouchableOpacity>\n\n                <Text style={styles.textHeader}>Đăng bài</Text>\n\n                <TouchableOpacity style={[styles.btnPost, valueText ? { backgroundColor: '#2099ee' } : {}]}>\n                    <Text style={[styles.textBtn, valueText ? { color: '#fff' } : {}]}>Đăng</Text>\n                </TouchableOpacity>\n            </View>\n\n            <View style={styles.ctnUser}>\n                <Image source={userImage} resizeMode=\"cover\" style={styles.imgUser} />\n                <View style={styles.ctnInfor}>\n                    <Text style={styles.textName}>Bad liar</Text>\n                    <View style={styles.ctnRole}>\n                        <Text style={styles.textRole}>Thành viên</Text>\n                    </View>\n                </View>\n            </View>\n\n            <View style={styles.ctnInput}>\n                <TextInput\n                    ref={textInputRef}\n                    placeholder=\"Đặt câu hỏi cho cộng đồng...\"\n                    placeholderTextColor={'#65676b'}\n                    style={styles.input}\n                    numberOfLines={4}\n                    onChangeText={(text) => setValueText(text)}\n                />\n            </View>\n        </View>\n    );\n};\n\nexport default CreatePost;\n"
        ],
        "mappings": "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"
    },
    "metadata": {},
    "sourceType": "module",
    "externalDependencies": []
}
