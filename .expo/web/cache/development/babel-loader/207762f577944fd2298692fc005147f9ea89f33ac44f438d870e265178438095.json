{
    "ast": null,
    "code": "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nvar DEFAULT_ANIMATE_TIME = 300;\nvar styles = StyleSheet.create({\n  emptyOverlay: {\n    backgroundColor: 'transparent',\n    height: 0,\n    position: 'absolute',\n    width: 0\n  },\n  fullOverlay: {\n    backgroundColor: 'transparent',\n    bottom: 0,\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0\n  }\n});\nvar Overlay = function Overlay(_ref) {\n  var visible = _ref.visible,\n    children = _ref.children;\n  var _React$useState = React.useState(new Animated.Value(0)),\n    _React$useState2 = _slicedToArray(_React$useState, 1),\n    fadeAnim = _React$useState2[0];\n  var _React$useState3 = React.useState(styles.emptyOverlay),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    overlayStyle = _React$useState4[0],\n    setOverlayStyle = _React$useState4[1];\n  var onAnimatedEnd = React.useCallback(function () {\n    if (!visible) {\n      setOverlayStyle(styles.emptyOverlay);\n    }\n  }, [visible]);\n  React.useEffect(function () {\n    if (visible) {\n      setOverlayStyle(styles.fullOverlay);\n    }\n    return Animated.timing(fadeAnim, {\n      toValue: visible ? 1 : 0,\n      duration: DEFAULT_ANIMATE_TIME,\n      useNativeDriver: false\n    }).start(onAnimatedEnd);\n  }, [visible, fadeAnim, onAnimatedEnd]);\n  return React.createElement(Animated.View, {\n    style: [overlayStyle, {\n      opacity: fadeAnim\n    }]\n  }, children);\n};\nexport default Overlay;",
    "map": {
        "version": 3,
        "names": [
            "React",
            "Animated",
            "StyleSheet",
            "DEFAULT_ANIMATE_TIME",
            "styles",
            "create",
            "emptyOverlay",
            "backgroundColor",
            "height",
            "position",
            "width",
            "fullOverlay",
            "bottom",
            "left",
            "right",
            "top",
            "Overlay",
            "_ref",
            "visible",
            "children",
            "_React$useState",
            "useState",
            "Value",
            "_React$useState2",
            "_slicedToArray",
            "fadeAnim",
            "_React$useState3",
            "_React$useState4",
            "overlayStyle",
            "setOverlayStyle",
            "onAnimatedEnd",
            "useCallback",
            "useEffect",
            "timing",
            "toValue",
            "duration",
            "useNativeDriver",
            "start",
            "createElement",
            "View",
            "style",
            "opacity"
        ],
        "sources": ["D:\\React Native\\MAD\\cook-app\\node_modules\\react-native-share\\src\\components\\Overlay.tsx"],
        "sourcesContent": [
            "import * as React from 'react';\nimport { Animated, StyleProp, StyleSheet, ViewStyle } from 'react-native';\n\nconst DEFAULT_ANIMATE_TIME = 300;\nconst styles = StyleSheet.create({\n  emptyOverlay: {\n    backgroundColor: 'transparent',\n    height: 0,\n    position: 'absolute',\n    width: 0,\n  },\n  fullOverlay: {\n    backgroundColor: 'transparent',\n    bottom: 0,\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0,\n  },\n});\n\nexport interface OverlayProps {\n  visible: boolean;\n}\n\nconst Overlay: React.FC<React.PropsWithChildren<OverlayProps>> = ({ visible, children }) => {\n  const [fadeAnim] = React.useState(new Animated.Value(0));\n  const [overlayStyle, setOverlayStyle] = React.useState<StyleProp<ViewStyle>>(styles.emptyOverlay);\n\n  const onAnimatedEnd = React.useCallback(() => {\n    if (!visible) {\n      setOverlayStyle(styles.emptyOverlay);\n    }\n  }, [visible]);\n\n  React.useEffect(() => {\n    if (visible) {\n      setOverlayStyle(styles.fullOverlay);\n    }\n    return Animated.timing(fadeAnim, {\n      toValue: visible ? 1 : 0,\n      duration: DEFAULT_ANIMATE_TIME,\n      useNativeDriver: false,\n    }).start(onAnimatedEnd);\n  }, [visible, fadeAnim, onAnimatedEnd]);\n\n  return <Animated.View style={[overlayStyle, { opacity: fadeAnim }]}>{children}</Animated.View>;\n};\n\nexport default Overlay;\n"
        ],
        "mappings": ";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAG9B,IAAMC,oBAAoB,GAAG,GAAG;AAChC,IAAMC,MAAM,GAAGF,UAAU,CAACG,MAAM,CAAC;EAC/BC,YAAY,EAAE;IACZC,eAAe,EAAE,aAAa;IAC9BC,MAAM,EAAE,CAAC;IACTC,QAAQ,EAAE,UAAU;IACpBC,KAAK,EAAE;EACT,CAAC;EACDC,WAAW,EAAE;IACXJ,eAAe,EAAE,aAAa;IAC9BK,MAAM,EAAE,CAAC;IACTC,IAAI,EAAE,CAAC;IACPJ,QAAQ,EAAE,UAAU;IACpBK,KAAK,EAAE,CAAC;IACRC,GAAG,EAAE;EACP;AACF,CAAC,CAAC;AAMF,IAAMC,OAAwD,GAAG,SAA3DA,OAAwDA,CAAAC,IAAA,EAA8B;EAAA,IAAxBC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IAAEC,QAAA,GAAAF,IAAA,CAAAE,QAAA;EAC3E,IAAAC,eAAA,GAAmBpB,KAAK,CAACqB,QAAQ,CAAC,IAAIpB,QAAQ,CAACqB,KAAK,CAAC,CAAC,CAAC,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAJ,eAAA;IAAjDK,QAAQ,GAAAF,gBAAA;EACf,IAAAG,gBAAA,GAAwC1B,KAAK,CAACqB,QAAQ,CAAuBjB,MAAM,CAACE,YAAY,CAAC;IAAAqB,gBAAA,GAAAH,cAAA,CAAAE,gBAAA;IAA1FE,YAAY,GAAAD,gBAAA;IAAEE,eAAe,GAAAF,gBAAA;EAEpC,IAAMG,aAAa,GAAG9B,KAAK,CAAC+B,WAAW,CAAC,YAAM;IAC5C,IAAI,CAACb,OAAO,EAAE;MACZW,eAAe,CAACzB,MAAM,CAACE,YAAY,CAAC;IACtC;EACF,CAAC,EAAE,CAACY,OAAO,CAAC,CAAC;EAEblB,KAAK,CAACgC,SAAS,CAAC,YAAM;IACpB,IAAId,OAAO,EAAE;MACXW,eAAe,CAACzB,MAAM,CAACO,WAAW,CAAC;IACrC;IACA,OAAOV,QAAQ,CAACgC,MAAM,CAACR,QAAQ,EAAE;MAC/BS,OAAO,EAAEhB,OAAO,GAAG,CAAC,GAAG,CAAC;MACxBiB,QAAQ,EAAEhC,oBAAoB;MAC9BiC,eAAe,EAAE;IACnB,CAAC,CAAC,CAACC,KAAK,CAACP,aAAa,CAAC;EACzB,CAAC,EAAE,CAACZ,OAAO,EAAEO,QAAQ,EAAEK,aAAa,CAAC,CAAC;EAEtC,OAAO9B,KAAA,CAAAsC,aAAA,CAACrC,QAAQ,CAACsC,IAAI;IAACC,KAAK,EAAE,CAACZ,YAAY,EAAE;MAAEa,OAAO,EAAEhB;IAAS,CAAC;EAAE,GAAEN,QAAwB,CAAC;AAChG,CAAC;AAED,eAAeH,OAAO"
    },
    "metadata": {},
    "sourceType": "module",
    "externalDependencies": []
}
